apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: prod-loki-ingress-alb
  namespace: loki
  annotations:
    alb.ingress.kubernetes.io/load-balancer-name: prod-loki-alb
    alb.ingress.kubernetes.io/scheme: internet-facing
    alb.ingress.kubernetes.io/group.name: prod-loki

    alb.ingress.kubernetes.io/target-type: instance
    # this deploymenthealthcheck is required to make sure targetgroup works for healthchecks
    alb.ingress.kubernetes.io/healthcheck-path: /healthcheck
    alb.ingress.kubernetes.io/healthcheck-interval-seconds: "22"
    alb.ingress.kubernetes.io/healthcheck-timeout-seconds: "5"
    alb.ingress.kubernetes.io/success-codes: "401"
    alb.ingress.kubernetes.io/subnets: "subnet-0739cc832fd5932be, subnet-03d123f26ce9587d0, subnet-094a84630f7f16b9e, subnet-0ecb20f99b9bb360f, subnet-029cf440a23bf5c01, subnet-0ff124fc582f11e28"
    # *.portal.ai cert in aws prod
    alb.ingress.kubernetes.io/certificate-arn: "arn:aws:acm:us-east-1:204443246822:certificate/a6d28235-7a46-4a54-a0d9-a432d85541a2"
    alb.ingress.kubernetes.io/ssl-policy: "ELBSecurityPolicy-TLS13-1-2-2021-06"

    # only register specific nodes to targetgroup
    # alb.ingress.kubernetes.io/target-node-labels: nodegroup=prod-px-airbyte

spec:
  ingressClassName: alb
  tls:
  - hosts:
    - "prod-loki.portal.ai"
  rules:
  - host: "prod-loki.portal.ai"
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: nginx-loki-svc
            port:
              number: 80